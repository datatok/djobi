plugins {
    id 'java-library'
    id "idea"
}

ext {
    variants = [
        [name: "kafka2"],
        [name: "kafka3"]
    ]
}


configurations {

    kafka2 {
    }

    kafka3 {

    }

    testRuntimeOnly.extendsFrom kafka2
    compileOnly.extendsFrom kafka2
}


dependencies {
    compileOnly project(':djobi-core')
    compileOnly project(path: ':djobi-core', configuration: 'spark')

    kafka2(group: 'org.apache.kafka', name: 'kafka-clients', version:'2.8.1') {
        exclude group: "org.xerial.snappy"
        exclude group: "org.slf4j"
    }

    kafka3(group: 'org.apache.kafka', name: 'kafka-clients', version:'3.3.1') {
        exclude group: "org.xerial.snappy"
    }

    testImplementation(
        project(":djobi-tests"),
        project(':djobi-core')
    )

    testRuntimeOnly(
        project(path: ':djobi-core', configuration: 'spark'),
        [group: 'org.apache.spark', name: 'spark-sql-kafka-0-10_' + scalaVersion, version: sparkVersion]
    )
}

tasks.withType(Test) {
    maxParallelForks = 1
    jvmArgs "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
};

djobi.createReleaseWithVariants(variants)