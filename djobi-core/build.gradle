plugins {
    id 'java-library'
    id "idea"
    id 'maven-publish'
    id 'signing'
}

configurations {

    // For AWS
    sparkAWS

    // Spark Core, SQL etc...
    spark

    compileOnly.extendsFrom spark, sparkAWS
    testImplementation.extendsFrom spark, sparkAWS

    djobiRelease.extendsFrom implementation
}

dependencies {
    // deps shared by all djobi projects

    implementation(
        [group: 'org.apache.commons', name: 'commons-csv', version:'1.6'],
        [group: 'com.hubspot.jinjava', name: 'jinjava', version: jinjavaVersion],
        [group: 'javax.mail', name: 'javax.mail-api', version:'1.6.2'],
        [group: 'com.jcraft', name : 'jsch', version: '0.1.55']
    )

    api dependencyStrings.GOOGLE_GUICE
    api dependencyStrings.TYPESAFE_CONFIG
    api dependencyStrings.ORG_YAML
    api dependencyStrings.OKHTTP
    api dependencyStrings.ELASTIC_APM

    sparkAWS(
        [group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.300']
    ) {
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'com.fasterxml.jackson.dataformat'
        exclude group: 'joda-time'
    }

    sparkAWS(
        [group: 'org.apache.hadoop', name: 'hadoop-aws', version: '3.3.2']
    )

    // Spark libs, as compileOnly, exclude guice (as we use the v4)
    spark(
        [group: 'org.apache.spark', name: 'spark-core_' + scalaVersion, version: sparkVersion]
    ) {
        exclude group: 'com.google.inject', module: 'guice'
        exclude group: 'junit', module: 'junit'
    }

    spark(
        [group: 'org.apache.spark', name: 'spark-hive_' + scalaVersion, version: sparkVersion],
        [group: 'org.apache.spark', name: 'spark-sql_' + scalaVersion, version: sparkVersion]
    )

    configurations.all {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-client'
        exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-api'
        exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-common'
    }

    testImplementation(project(":djobi-tests"))
}

jar {
    manifest {
        attributes 'Implementation-Version': archiveVersion
        attributes 'Automatic-Module-Name': 'io.datatok.djobi'

        // OSGi metadata
        attributes 'Bundle-SymbolicName': 'io.datatok.djobi'
        attributes 'Bundle-Name': 'Application to run ETL over Apache Spark'
        attributes 'Bundle-Vendor': 'Datatok'
        attributes 'Bundle-DocURL': 'https://github.com/datatok/djobi'
        attributes 'Bundle-License': 'https://www.apache.org/licenses/LICENSE-2.0'
        attributes 'Export-Package': 'io.datatok.djobi.*'
    }
}


javadoc.options.addStringOption('Xdoclint:none', '-quiet')

/* RELEASE */

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.datatok.djobi'
            artifactId = 'djobi-core'

            from components.java

            pom {
                name = 'djobi-core'
                description = 'Djobi core'
                url = 'https://github.com/datatok/djobi'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ebuildy'
                        name = 'Thomas Decaux'
                        email = 'ebuildy@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "ossrh"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }

        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/datatok/djobi"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

djobi.createRelease()
