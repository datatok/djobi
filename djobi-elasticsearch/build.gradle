plugins {
    id 'idea'
    id 'java-library'
}

ext {
    variants = [
        [name: "es7"],
        [name: "es8"]
    ]
}

configurations {
    es7
    es8

    testRuntimeOnly.extendsFrom es7
    compileOnly.extendsFrom es7
}

dependencies {
    compileOnly project(':djobi-core')
    compileOnly project(path: ':djobi-core', configuration: 'spark')

    es7(group: 'org.elasticsearch', name: 'elasticsearch-spark-30_' + scalaVersion, version:'7.17.3') {
        exclude group: "org.scala-lang"
        exclude group: "org.apache.spark"
        exclude group: "com.google.protobuf"
        exclude group: "javax.xml.bind"
    }

    es8(group: 'org.elasticsearch', name: 'elasticsearch-spark-30_' + scalaVersion, version:'8.4.1') {
        exclude group: "org.scala-lang"
        exclude group: "org.apache.spark"
        exclude group: "com.google.protobuf"
        exclude group: "javax.xml.bind"
    }

    testImplementation(
        project(":djobi-tests"),
        project(':djobi-core')
    )

    testRuntimeOnly(
        project(path: ':djobi-core', configuration: 'spark')
    )
}

tasks.withType(Test) {
    maxParallelForks = 1
    jvmArgs "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
};

djobi.createReleaseWithVariants(variants)
